name: Test rest-s3-tpcds

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  integration-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('rest-s3-tpcds/docker-compose.yml') }}

      - name: Start services
        working-directory: rest-s3-tpcds
        run: docker compose up -d minio mc rest # Start dependencies

      - name: Run spark container and capture exit code
        id: spark-run
        run: |
          # Run in foreground and capture exit code
          docker compose up --exit-code-from spark-iceberg spark-iceberg
          echo "exit_code=$?" >> $GITHUB_OUTPUT

      - name: Verify spark exit code
        if: steps.spark-run.outputs.exit_code != 0
        run: |
          echo "❌ Spark container exited with code ${{ steps.spark-run.outputs.exit_code }}"
          docker compose logs spark-iceberg  # Show logs for debugging
          exit 1

      # E2E test
      - name: Run Python E2E test
        working-directory: rest-s3-tpcds
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install pyiceberg requests
          cat << EOF > test_iceberg.py
          from pyiceberg.catalog import load_catalog

          catalog = load_catalog(
              "default",
              **{
                  "uri": "http://localhost:8181",
                  "s3.endpoint": "http://localhost:9000",
                  "s3.access-key-id": "admin",
                  "s3.secret-access-key": "password"
              }
          )
          assert "tpcds" in catalog.list_namespaces()
          print("✅ End-to-end test passed")
          EOF
          python test_iceberg.py
