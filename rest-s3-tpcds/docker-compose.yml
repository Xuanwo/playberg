services:
  minio:
    image: minio/minio
    container_name: minio
    hostname: minio.local
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio.local
    networks:
      iceberg_net:
        aliases:
          - warehouse.minio.local
    ports:
      - 9001:9001
      - 9000:9000
    command: ["server", "/data", "--console-address", ":9001"]

  # Create the warehouse bucket in minio.
  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    networks:
      iceberg_net:
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: |
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio.local:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc policy set public minio/warehouse;
      "

  rest:
    image: tabulario/iceberg-rest
    container_name: iceberg-rest
    hostname: rest.local
    networks:
      iceberg_net:
    depends_on:
      mc:
        condition: service_completed_successfully
    ports:
      - 8181:8181
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio.local:9000

  spark-iceberg:
    image: tabulario/spark-iceberg
    container_name: spark-iceberg
    entrypoint: |
      /bin/sh -c '
      cd /home/iceberg
      pip install duckdb --upgrade
      python /opt/spark/scripts/generate_data.py
      '
    networks:
      iceberg_net:
    depends_on:
      - rest
    volumes:
      - ./spark-defaults.conf:/opt/spark/conf/spark-defaults.conf
      - ./generate_data.py:/opt/spark/scripts/generate_data.py
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      # Disable python buffered stdout
      - PYTHONUNBUFFERED=1
    ports:
      - 8888:8888
      # - 8080:8080
      - 10000:10000
      - 10001:10001

networks:
  iceberg_net:
