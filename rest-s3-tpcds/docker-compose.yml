services:
  minio:
    extends:
      file: composes/minio.yml
      service: minio
    ports:
      - 9001:9001
      - 9000:9000
    environment: &aws-credentials
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: password
      AWS_REGION: us-east-1

  mc:
    extends:
      file: composes/minio.yml
      service: mc
    environment:
      <<: *aws-credentials

  rest:
    extends:
      file: composes/tabular-rest.yml
      service: rest
    environment:
      <<: *aws-credentials

  spark-iceberg:
    extends:
      file: composes/tabular-ingest.yml
      service: spark-iceberg
    environment:
      <<: *aws-credentials
      PYTHONUNBUFFERED: 1
    depends_on:
      - rest
      - mc
      - minio
    volumes:
      - ./configs/tabular_ingest/spark-defaults.conf:/opt/spark/conf/spark-defaults.conf
      - ./configs/tabular_ingest/generate_data.py:/opt/spark/scripts/generate_data.py
  
  meta:
    extends:
      file: composes/databend.yml
      service: meta
    volumes:
      - ./configs/databend/meta.toml:/etc/databend/meta.toml

  query:
    extends:
      file: composes/databend.yml
      service: query
    depends_on:
      - meta
      - minio
      - mc
    ports:
      - "8000:8000"
    volumes:
      - ./configs/databend/query.toml:/etc/databend-query/config.toml


  # optional catalog lakekeeper
  lakekeeper:
    extends:
      file: composes/lakekeeper.yml
      service: lakekeeper
    ports:
      - 8182:8181
    depends_on:
      - mc
      - minio
   
  bootstrap:
    extends:
      file: composes/lakekeeper.yml
      service: bootstrap
  db:
    extends:
      file: composes/lakekeeper.yml
      service: db
  migrate:
    extends:
      file: composes/lakekeeper.yml
      service: migrate

  initiallakekeeperwarehouse:
    extends:
      file: composes/lakekeeper.yml
      service: initiallakekeeperwarehouse
    volumes:
      - ./configs/lakekeeper/create-default-warehouse.json:/home/curl_user/create-default-warehouse.json
  
  jupyter:
    extends:
      file: composes/jupyter.yml
      service: jupyter
    volumes:
      - ./notebooks:/home/jovyan/examples/

networks:
  iceberg_net: 